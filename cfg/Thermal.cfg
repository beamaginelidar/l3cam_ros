#! /usr/bin/env python
PACKAGE = "l3cam_ros"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Parameters
# gen.add(name, paramtype, level, description, default, min, max, edit_method)

# CHANGE_THERMAL_CAMERA_COLORMAP
thermal_colormap_enum = gen.enum([gen.const("new_thermal_WHITE_HOT", int_t, 0,   "White hot"),
                                  gen.const("new_thermal_BLACK_HOT", int_t, 1, "Black hot"),
                                  gen.const("new_thermal_SPECTRA", int_t, 2, "Spectra"),
                                  gen.const("new_thermal_PRISM", int_t, 3, "Prism"),
                                  gen.const("new_thermal_TYRIAN", int_t, 4, "Tyrian"),
                                  gen.const("new_thermal_IRON", int_t, 5, "Iron"),
                                  gen.const("new_thermal_AMBER", int_t, 6, "Amber"),
                                  gen.const("new_thermal_HI", int_t, 7, "Hi"),
                                  gen.const("new_thermal_GREEN", int_t, 8, "Green")],
                                  "Enum to set thermal camera colormap")
gen.add("thermal_colormap", int_t, 0, "Change thermal camera colormap", 1, 1, 108, edit_method=thermal_colormap_enum)
# ENABLE_THERMAL_CAMERA_TEMPERATURE_FILTER
gen.add("thermal_temperature_filter", bool_t, 1, "Enable thermal camera temperature filter", False)
# CHANGE_THERMAL_CAMERA_TEMPERATURE_FILTER
gen.add("thermal_temperature_filter_min", int_t, 2, "Change thermal camera max temperature filter", 0,  -40, 200)
gen.add("thermal_temperature_filter_max", int_t, 3, "Change thermal camera min temperature filter", 50, -40, 200)
# CHANGE_THERMAL_CAMERA_PROCESSING_PIPELINE
thermal_processing_pipeline_enum = gen.enum([gen.const("Lite", int_t, 0, "Lite"),
                                  gen.const("Legacy", int_t, 1, "Legacy"),
                                  gen.const("Seek", int_t, 2, "Seek")],
                                  "Enum o set thermal pipeline")
gen.add("thermal_processing_pipeline", int_t, 4, "Change thermal camera pipeline", 1, 0, 2, edit_method=thermal_processing_pipeline_enum)
# ENABLE_THERMAL_CAMERA_TEMPERATURE_DATA_UDP
gen.add("thermal_temperature_data_udp", bool_t, 5, "Enable thermal temperature data to be streamed by udp", False)
# CHANGE_STREAMING_PROTOCOL
thermal_streaming_protocol_enum = gen.enum([gen.const("protocol_raw_udp", int_t, 0, "Raw UDP"),
                                            gen.const("protocol_gstreamer", int_t, 1, "GStreamer")],
                                            "Enum to set thermal camera streaming protocol")
gen.add("thermal_streaming_protocol", int_t, 6, "Change thermal camera RTPS pipeline", 0, 0, 1, edit_method=thermal_streaming_protocol_enum)
# CHANGE_RTSP_PIPELINE
gen.add("thermal_rtsp_pipeline", str_t, 7, "Thermal camera RTSP pipeline", "")

exit(gen.generate(PACKAGE, "l3cam_ros", "Thermal"))
